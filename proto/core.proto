syntax = "proto3";

package core;

service CoreService {
  rpc Register (RegisterRequest) returns (RegisterResponse) {}
  rpc RegisterDriver (RegisterDriverRequest) returns (RegisterDriverResponse) {}
  rpc RegisterMerchant (RegisterMerchantRequest) returns (RegisterMerchantResponse) {}
  rpc FinalRegisterDriver (RegisterDriverRequest) returns (RegisterDriverResponse) {}
  rpc FinalRegisterMerchant (FinalMerchantRegistrationRequest) returns (FinalMerchantRegistrationResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc LoginDriver (LoginDriverRequest) returns (LoginResponse) {}
  rpc Logout (LogoutRequest) returns (ValidateResponse) {}
  rpc Validate (ValidateRequest) returns (ValidateResponse) {}
  rpc ValidateDriver (ValidateRequest) returns (ValidateResponse) {}
  rpc ValidateOTP (ValidateOTPRequest) returns (ValidateOTPResponse) {}
  rpc ResendOTP (ResendOTPRequest) returns (ResendOTPResponse) {}
  rpc ShipperOrganization (ShipperOrganizationRequest) returns (ShipperOrganizationResponse) {}
  rpc LogisticOrganization (LogisticOrganizationRequest) returns (LogisticOrganizationResponse) {}
  rpc ForgotPassword (ForgotPasswordRequest) returns (ForgotPasswordResponse) {}
  rpc ForgotPasswordForDriver (ForgotPasswordDriverRequest) returns (ForgotPasswordResponse) {}
  rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse) {}
  rpc GetUsers (GetUsersRequest) returns (GetUsersResponse) {}
  rpc GetUsersByOrgId (GetUsersByOrgIdRequest) returns (GetUsersResponse) {}
  rpc AddUser (AddUserRequest) returns (AddUserResponse) {}
  rpc GetRoles (GetRolesRequest) returns (GetRolesResponse) {}
  rpc AddRole (AddRoleRequest) returns (AddRoleResponse) {}
  rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse) {}
  rpc GetRoleUsers (GetRoleUsersRequest) returns (GetRoleUsersResponse) {}
  rpc GetOrganizationPermissions (GetOrganizationPermissionsRequest) returns (GetOrganizationPermissionsResponse) {}
  rpc GetAuthUser (GetAuthUserRequest) returns (GetAuthUserResponse) {}
  rpc getOrganisationByAccountNo (GetOrganisationByAccountNoRequest) returns (GetOrganisationByAccountNoResponse) {}
  rpc ChangeOfStatusOfDriver (ChangeDriverStatusRequest) returns (ChangeDriverStatusResponse) {}
  rpc VerifyUserDeviceId (VerifyUserDeviceIdRequest) returns (VerifyUserDeviceIdResponse) {}
  rpc GetOrganisationOrgId (GetUsersByOrgIdRequest) returns (GetOrganisationByAccountNoResponse) {}
  rpc DisableSubUser (GetUsersRequest) returns (DisableSubUserResponse) {}
  rpc UpdateFilterRequest (FiterUpdateRequest) returns (DisableSubUserResponse) {}
  rpc ContactUs (ContactUsRequest) returns (ContactUsResponse) {}
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc GoogleApp (GoogleAppRequest) returns (GoogleAppResponse) {}
  rpc GoogleAuth (GoogleAuthRequest) returns (GoogleAuthResponse) {}
  rpc RateDriver (AddDriverRatingRequest) returns (AddDriverRatingResponse) {}
  rpc GetDriverSummary (GetDriverRatingSummaryRequest) returns (GetDriverRatingSummaryResponse) {}
  rpc UpdateOrganisation (UpdateOrganisationRequest) returns (GetOrganisationByAccountNoResponse) {}
}

message GetAuthUserRequest {
  string userId = 1;
}
message GetAuthUserResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  User data = 3;
}
// Register User
message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  bool termsCondition = 6;
  string type = 7;
}
message RegisterResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string email = 3;
}

// Register Driver
message RegisterDriverRequest {
  string phoneCode = 1;
  string phoneNumber = 2;
  optional string password = 3;
}
message RegisterDriverResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string phoneCode = 3;
  string phoneNumber = 4;
}

// Register Merchant
message RegisterMerchantRequest {
  string email = 1;
}
message RegisterMerchantResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string email = 3;
}

// Register Merchant User and Organization
message FinalMerchantRegistrationRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  string companyName = 6;
  bool registeredWithCAC = 7;
  optional string CACRegistrationNumber = 8;
  bool termsCondition = 9;
}

message FinalMerchantRegistrationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
}

// Validate OTP
message ValidateOTPRequest {
  optional string email = 1;
  int32 code = 2;
  string type = 3;
  optional string phoneCode = 4;
  optional string phoneNumber = 5;
}

message ValidateOTPResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool verified = 3;
  optional string token = 4;
  optional string userId = 5;
  optional string phoneCode = 6;
  optional string phoneNumber = 7;
  optional string email = 8;
}

// Resend OTP
message ResendOTPRequest {
  optional string email = 1;
  string type = 2;
  optional string phoneCode = 3;
  optional string phoneNumber = 4;
}

message ResendOTPResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool sent = 3;
}

// Register Shipper Organization
message ShipperOrganizationRequest {
  string companyName = 1;
  string country = 2;
  string state = 3;
  string city = 4;
  string companyAddress = 5;
  string companyWebsite = 6;
  string userId = 7;
}
message ShipperOrganizationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
}

// Register Logistics Organization
message LogisticOrganizationRequest {
  string companyName = 1;
  string country = 2;
  string state = 3;
  string city = 4;
  string companyAddress = 5;
  string companyWebsite = 6;
  optional int32 noOfDrivers = 7;
  optional int32 noOfVehicles = 8;
  bool acceptsShipment = 9;
  string userId = 10;
  optional string referralCode = 11;
}
message LogisticOrganizationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
}

// Login
message LoginRequest {
  string email = 1;
  string password = 2;
  optional string userType = 3;
}
message LoginResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  optional string token = 3;
  optional string userId = 4;
  optional string userType = 5;
}

message LoginDriverRequest {
  string phoneCode = 1;
  string phoneNumber = 2;
  string password = 3;
}

// ForgotPassword
message ForgotPasswordRequest {
  string email = 1;
}

message ForgotPasswordDriverRequest {
  string phoneCode = 1;
  string phoneNumber = 2;
}

message ForgotPasswordResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  optional string email = 3;
  bool valid = 4;
  optional string phoneCode = 5;
  optional string phoneNumber = 6;

}

// ChangePassword
message ChangePasswordRequest {
  string newPassword = 1;
  string confirmPassword = 2;
  string userId = 3;
}
message ChangePasswordResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool changed = 3;
}

// Validate
message ValidateRequest {
  string token = 1;
}
message ValidateResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  optional User data = 3;
}

message GetUsersRequest {
  int32 orgId = 1;
  string userId = 2;
}

message GetUsersByOrgIdRequest {
  int32 orgId = 1;
}

message GetUsersResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  repeated User data = 3;
}

message GetOrgnisationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  repeated Organization data = 3;
}

message AddUserRequest {
  string name = 1;
  string email = 2;
  optional string password = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  string roleId = 6;
  int32 orgId = 7;
  string userType = 8;
  string userId = 9;
}
message AddUserResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string id = 3;
}
message GetRoleUsersRequest {
  string roleId = 1;
}
message GetRoleUsersResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  repeated User data = 3;
}


message GetRolesRequest {
  int32 orgId = 1;
}
message GetRolesResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  repeated Role data = 3;
}
message AddRoleRequest {
  string title = 1;
  optional string reportingTo = 2;
  int32 orgId = 3;
  repeated string permissions = 4;
  string userId = 5;
}
message AddRoleResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string id = 3;
}
message UpdateRoleRequest {
  string id = 1;
  string title = 2;
  optional string reportingTo = 3;
  repeated string permissions = 4;
  string status = 5;
  int32 orgId = 6;
}
message UpdateRoleResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string id = 3;
}

message GetOrganizationPermissionsRequest {
  string userType = 1;
}
message GetOrganizationPermissionsResponse {
  repeated Permission permission = 1;
}

// CreatedBy
message CreatedBy{
  string id = 1;
  string name = 2;
}
// Location 
message Location{
  string address = 1;
  string city = 2;
  string country = 3;
  string state = 4;
}
// User
message User{
  string id = 1;
  string name = 2;
  string email = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  string status = 6;
  string type = 7;
  string createdAt = 8;
  Role role = 9;
  optional Organization organization = 10;
  string meta = 11;
  optional int32 orgId = 12;
  optional Config configuration = 13;
  optional int32 user_id = 14;
  optional string attributes = 15;
  optional string orgUuid = 16;
}
// Organization
message Organization{
  string id = 1;
  string name = 2;
  Location location = 3;
  string updatedAt = 4;
  string createdAt = 5;
  string meta = 6;
  optional User user = 7;
  optional string uuid = 8;
  optional string attributes = 9;
}
// Permissions
message Permission{
  string id = 1;
  string name = 2;
}
// Role
message Role{
  string id = 1;
  string title = 2;
  optional int32 orgId = 3;
  string status = 4;
  repeated Permission permissions = 5;
  optional CreatedBy createdBy = 6;
  string createdAt = 7;
  optional CreatedBy reportingTo = 8;
}

message Config{
  repeated Configuration configuration = 1;
}
//Configuration
message Configuration{
  string id = 1;
  string name = 2;
  int32 orgId = 3;
  string status = 4;
  bool default = 5;
  string createdAt = 6;
  optional string options = 7;
  optional string value = 8;
}

message GetOrganisationByAccountNoResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  Organization data = 3;
}
message GetOrganisationByAccountNoRequest {
  string accountNo = 1;
}


message ChangeDriverStatusRequest {
  string ulid = 1;
}
message ChangeDriverStatusResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool success = 3;
}

message VerifyUserDeviceIdRequest {
  string phoneCode = 1;
  string phoneNumber = 2;
  string deviceId = 3;
  optional bool firstLogin = 4;
}

message VerifyUserDeviceIdResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool success = 3;
}

message DisableSubUserResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool success = 3;
}

message LogoutRequest {
  string userId = 1;
  int32 orgId = 2;
  optional string deviceType = 3;
}
message FiterUpdateRequest {
  string type = 1;
  string startDate = 2;
  string endDate = 3;
  string userId = 4;
}

message ContactUsRequest {
  string userId = 1;
  string message = 2;
  string title = 3;
}

message ContactUsResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool success = 3;
}

message UpdateUserRequest {
  string userId = 1;
  optional string name = 2;
  optional string phoneCode = 4;
  optional string phoneNumber = 5;
}

message UpdateUserResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  User data = 3;
}
// Get Google Authorization Url
message GoogleAppRequest {}
message GoogleAppResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string googleAuthorizationUrl = 3;
}

// Authenticate With Google
message GoogleAuthRequest {
  string authCode = 1;
  
}
message GoogleAuthResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string redirect = 3;
  optional bool verified = 4;
  optional string email = 5;
  optional string token = 6;
  
}

message Rating {
  string type =1;
  float rate = 2;
}
message AddDriverRatingRequest {
  string driverId = 1;
  repeated Rating rating = 2;
  optional string description = 3;
}

message AddDriverRatingResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool success = 3;
}

message GetDriverRatingSummaryRequest {
  string driverId = 1;
}

message DriverSubSummaryRate{
  string type = 1;
  float averageRate = 2;
}

message DriverRateSummary {
  int32 totalReview = 1;
  float averageRating =2;
  repeated DriverSubSummaryRate summary = 3;
}

message GetDriverRatingSummaryResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  DriverRateSummary data=3;
}

message UpdateOrganisationRequest {
  int32 orgId = 1;
  string payload =2;
}
