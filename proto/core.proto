syntax = "proto3";

package core;

service CoreService {
  rpc Register (RegisterRequest) returns (RegisterResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc Validate (ValidateRequest) returns (ValidateResponse) {}
  rpc ValidateOTP (ValidateOTPRequest) returns (ValidateOTPResponse) {}
  rpc ResendOTP (ResendOTPRequest) returns (ResendOTPResponse) {}
  rpc ShipperOrganization (ShipperOrganizationRequest) returns (ShipperOrganizationResponse) {}
  rpc LogisticOrganization (LogisticOrganizationRequest) returns (LogisticOrganizationResponse) {}
  rpc ForgotPassword (ForgotPasswordRequest) returns (ForgotPasswordResponse) {}
  rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse) {}
  // rpc GetUser (GetUserRequest) returns (GetUserResponse) {}
  rpc GetUsers (GetUsersRequest) returns (GetUsersResponse) {}
  rpc AddUser (AddUserRequest) returns (AddUserResponse) {}
  // rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {}
  // rpc GetRole (GetRolesRequest) returns (GetRolesResponse) {}
  rpc GetRoles (GetRolesRequest) returns (GetRolesResponse) {}
  rpc AddRole (AddRoleRequest) returns (AddRoleResponse) {}
  rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse) {}
 }

// Register User
message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  bool termsCondition = 6;
  string type = 7;
}
message RegisterResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string email = 3;
}

// Validate OTP
message ValidateOTPRequest {
  string email = 1;
  int32 code = 2;
  string type = 3;
}
message ValidateOTPResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool verified = 3;
  optional string token = 4;
  optional string userId = 5;
}

// Resend OTP
message ResendOTPRequest {
  string email = 1;
  string type = 2;
}
message ResendOTPResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool sent = 3;
}

// Register Shipper Organization
message ShipperOrganizationRequest {
  string companyName = 1;
  string country = 2;
  string state = 3;
  string city = 4;
  string companyAddress = 5;
  string companyWebsite = 6;
  string userId = 7;
}
message ShipperOrganizationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
}

// Register Logistics Organization
message LogisticOrganizationRequest {
  string companyName = 1;
  string country = 2;
  string state = 3;
  string city = 4;
  string companyAddress = 5;
  string companyWebsite = 6;
  int32 noOfDrivers = 7;
  int32 noOfVehicles = 8;
  bool acceptsShipment = 9;
  string userId = 10;
}
message LogisticOrganizationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
}

// Login
message LoginRequest {
  string email = 1;
  string password = 2;
}
message LoginResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string token = 3;
}

// ForgotPassword
message ForgotPasswordRequest {
  string email = 1;
}
message ForgotPasswordResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string email = 3;
  bool valid = 4;
}

// ChangePassword
message ChangePasswordRequest {
  string newPassword = 1;
  string confirmPassword = 2;
  string userId = 3;
}
message ChangePasswordResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool changed = 3;
}

// Validate
message ValidateRequest {
  string token = 1;
}
message ValidateResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string id = 3;
  string email = 4;
  int32 orgId = 5;
}

// User
message User{
  string id = 1;
  string name = 2;
  string email = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  string status = 6;
  string createdAt = 7;
  Role role = 8;
  string meta = 9;
}
message GetUsersRequest {
  int32 orgId = 1;
}
message GetUsersResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  repeated User data = 3;
}
message AddUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  string roleId = 6;
  int32 orgId = 7;
}
message AddUserResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string id = 3;
}
// message UpdateUserRequest {
//   optional string name = 1;
//   string phoneCode = 2;
//   string phoneNumber = 3;
//   string role = 4;
// }
// message UpdateUserResponse {
//   int32 statusCode = 1;
//   repeated string error = 2;
//   string updatedUserId = 3;
// }

// Permissions
message Permission{
  
}
// Role

message RoleCreator{
  string id = 1;
  string name = 2;
}

message RoleManager{
  string id = 1;
  string name = 2;
}

message Role{
  string id = 1;
  string title = 2;
  int32 orgId = 3;
  string status = 4;
  string permissions = 5;
  RoleCreator createdBy = 6;
  optional RoleManager reportingTo = 7;
}
message GetRolesRequest {
  int32 orgId = 1;
}
message GetRolesResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  repeated Role data = 3;
}
message AddRoleRequest {
  string title = 1;
  optional string reportingTo = 2;
  int32 orgId = 3;
  repeated string permissions = 4;
  string userId = 5;
}
message AddRoleResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string id = 3;
}
message UpdateRoleRequest {
  string id = 1;
  string title = 2;
  optional string reportingTo = 3;
  repeated string permissions = 4;
  string status = 5;
  int32 orgId = 6;
}
message UpdateRoleResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string updatedRoleId = 3;
}