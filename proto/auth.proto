syntax = "proto3";

package auth;

service AuthService {
  rpc Register (RegisterRequest) returns (RegisterResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc Validate (ValidateRequest) returns (ValidateResponse) {}
  rpc ValidateOTP (ValidateOTPRequest) returns (ValidateOTPResponse) {}
  rpc ResendOTP (ResendOTPRequest) returns (ResendOTPResponse) {}
  rpc ShipperOrganization (ShipperOrganizationRequest) returns (ShipperOrganizationResponse) {}
  rpc LogisticOrganization (LogisticOrganizationRequest) returns (LogisticOrganizationResponse) {}
}

enum UserType {
  SHIPPER = 0;
  LOGISTICS = 1;
}

message Response {
  int32 code = 1;
  string message = 2;
  string description = 3;
  repeated string data = 4;
}

// Register

message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string phoneCode = 4;
  string phoneNumber = 5;
  bool termsCondition = 6;
  string type = 7;
}

message RegisterResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string email = 3;
}

//OTP

message ValidateOTPRequest {
  string email = 1;
  int32 code = 2;
}

message ValidateOTPResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool verified = 3;
  string userId = 4;
  optional string token = 5;
}

message ResendOTPRequest {
  string email = 1;
}

message ResendOTPResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  bool sent = 3;
}

// Organization

message ShipperOrganizationRequest {
  string companyName = 1;
  string country = 2;
  string state = 3;
  string city = 4;
  string companyAddress = 5;
  string companyWebsite = 6;
  string userId = 7;
}

message ShipperOrganizationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
}

message LogisticOrganizationRequest {
  string companyName = 1;
  string country = 2;
  string state = 3;
  string city = 4;
  string companyAddress = 5;
  string companyWebsite = 6;
  int32 noOfDrivers = 7;
  int32 noOfVehicles = 8;
  bool acceptsShipment = 9;
  string userId = 10;
}

message LogisticOrganizationResponse {
  int32 statusCode = 1;
  repeated string error = 2;
}

// Login

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  string token = 3;
}

// Validate

message ValidateRequest {
  string token = 1;
}

message ValidateResponse {
  int32 statusCode = 1;
  repeated string error = 2;
  optional string userId = 3;
}